#!/usr/bin/env python3
"""
Script de prueba para verificar que OpenAI est√° reformulando respuestas correctamente
"""
import os
import sys
import django

# Configurar Django
sys.path.append('/home/erickxse/visual/asegcbot/chatbot_api')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'chatbot_api.settings')
django.setup()

from chatbot.views import consultar_llm_inteligente, consultar_openai

def test_openai_reformulation():
    """
    Prueba espec√≠fica de reformulaci√≥n usando OpenAI
    """
    print("üß™ PRUEBA DE REFORMULACI√ìN CON OPENAI")
    print("=" * 50)
    
    # Simular una respuesta original de FAQ que necesita reformulaci√≥n
    respuesta_original = "Los horarios de atenci√≥n de la secretar√≠a son de 8:00 a 17:00 de lunes a viernes."
    pregunta_usuario = "¬øA qu√© hora atiende la secretar√≠a?"
    
    # Crear el prompt de reformulaci√≥n (igual al que usa el sistema)
    prompt_reformulacion = (
        "Eres un asistente de la ESPE. Reformula √öNICAMENTE el estilo manteniendo EXACTAMENTE la misma informaci√≥n.\n"
        "INSTRUCCIONES ESTRICTAS:\n"
        "- NO cambies la informaci√≥n factual\n"
        "- NO agregues informaci√≥n nueva\n"
        "- SOLO mejora la redacci√≥n si es necesario\n\n"
        f"Respuesta original:\n{respuesta_original}\n\n"
        f"Pregunta del usuario:\n{pregunta_usuario}\n\n"
        "Reformula SOLO el estilo manteniendo TODA la informaci√≥n:"
    )
    
    print(f"üìù RESPUESTA ORIGINAL:")
    print(f"   {respuesta_original}")
    print()
    print(f"‚ùì PREGUNTA DEL USUARIO:")
    print(f"   {pregunta_usuario}")
    print()
    print(f"üîÑ PROBANDO REFORMULACI√ìN...")
    
    # Probar directamente consultar_openai
    print("\n1Ô∏è‚É£ Probando consultar_openai() directamente:")
    respuesta_openai = consultar_openai(prompt_reformulacion)
    if respuesta_openai:
        print(f"‚úÖ OpenAI respondi√≥ correctamente:")
        print(f"   {respuesta_openai}")
    else:
        print("‚ùå OpenAI no respondi√≥ o hubo error")
    
    # Probar consultar_llm_inteligente (funci√≥n principal)
    print("\n2Ô∏è‚É£ Probando consultar_llm_inteligente() (funci√≥n principal):")
    respuesta_llm = consultar_llm_inteligente(prompt_reformulacion)
    if respuesta_llm:
        print(f"‚úÖ LLM inteligente respondi√≥:")
        print(f"   {respuesta_llm}")
    else:
        print("‚ùå LLM inteligente no respondi√≥")
    
    print("\n" + "=" * 50)
    print("üîç AN√ÅLISIS DE RESULTADOS:")
    
    if respuesta_openai:
        print("‚úÖ OpenAI est√° funcionando correctamente")
        print("‚úÖ El sistema S√ç est√° usando OpenAI para reformular respuestas")
        if respuesta_openai != respuesta_original:
            print("‚úÖ OpenAI est√° reformulando (no devolviendo texto original)")
        else:
            print("‚ö†Ô∏è  OpenAI devolvi√≥ el mismo texto (posible, pero poco probable)")
    else:
        print("‚ùå OpenAI NO est√° funcionando")
        print("‚ùå El sistema NO puede reformular respuestas")
    
    print("\nüéØ CONCLUSI√ìN:")
    if respuesta_openai:
        print("   El chatbot S√ç est√° usando OpenAI GPT-3.5-turbo para reformular")
        print("   las respuestas del FAQ y mejorar su presentaci√≥n.")
    else:
        print("   El chatbot NO est√° usando OpenAI para reformular.")
        print("   Est√° devolviendo respuestas directas del FAQ sin procesar.")

if __name__ == "__main__":
    test_openai_reformulation()
