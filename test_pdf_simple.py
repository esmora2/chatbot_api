#!/usr/bin/env python3
"""
Pruebas simples para verificar el PDF de aplicaciones basadas en el conocimiento
"""
import requests
import json

BASE_URL = "http://localhost:8000/chatbot"

def probar_pdf_aplicaciones():
    """
    Prueba espec√≠fica para el PDF de aplicaciones basadas en el conocimiento
    """
    print("üîç PROBANDO PDF: espe_software_aplicaciones_basadas_en_el_conocimiento.pdf")
    print("=" * 70)
    
    # Preguntas espec√≠ficas sobre aplicaciones basadas en conocimiento
    preguntas = [
        "¬øQu√© es aplicaciones basadas en el conocimiento?",
        "¬øCu√°l es el contenido de aplicaciones basadas en el conocimiento?",
        "¬øQu√© temas incluye la materia de aplicaciones basadas en el conocimiento?",
        "¬øHay informaci√≥n sobre sistemas expertos?",
        "¬øQu√© syllabus tiene aplicaciones basadas en el conocimiento?",
        "¬øCu√°les son los objetivos de aplicaciones basadas en el conocimiento?",
        "¬øQu√© metodolog√≠a se usa en aplicaciones basadas en el conocimiento?",
        "¬øCu√°l es la bibliograf√≠a de aplicaciones basadas en el conocimiento?"
    ]
    
    for i, pregunta in enumerate(preguntas, 1):
        print(f"\n{i}. ‚ùì {pregunta}")
        print("-" * 50)
        
        try:
            response = requests.post(
                f"{BASE_URL}/",
                headers={"Content-Type": "application/json"},
                json={"pregunta": pregunta}
            )
            
            if response.status_code == 200:
                data = response.json()
                respuesta = data.get("respuesta", "")
                fuente = data.get("fuente", "")
                metodo = data.get("metodo", "")
                
                print(f"üì§ Respuesta: {respuesta[:200]}...")
                print(f"üìç Fuente: {fuente}")
                print(f"üîß M√©todo: {metodo}")
                
                # Verificar si la respuesta parece venir del PDF
                if "aplicaciones basadas" in respuesta.lower() or "conocimiento" in respuesta.lower():
                    print("‚úÖ Respuesta relevante al PDF")
                else:
                    print("‚ö†Ô∏è  Respuesta podr√≠a no venir del PDF")
                    
            else:
                print(f"‚ùå Error HTTP: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå Error: {e}")
    
    print("\n" + "=" * 70)
    print("üéØ CONCLUSIONES:")
    print("- Si las respuestas mencionan contenido espec√≠fico del syllabus, el PDF funciona")
    print("- Si respuestas son gen√©ricas, el PDF podr√≠a no estar cargado")
    print("- Verificar que el archivo est√© en media/docs/")

def verificar_contexto_pdf():
    """
    Verifica si el chatbot puede acceder al contenido del PDF
    """
    print("\nüîç VERIFICANDO ACCESO AL CONTENIDO DEL PDF")
    print("=" * 50)
    
    # Consultas muy espec√≠ficas que deber√≠an estar en el PDF
    consultas_especificas = [
        "syllabus aplicaciones basadas conocimiento",
        "contenido program√°tico aplicaciones conocimiento",
        "objetivos aplicaciones basadas conocimiento",
        "evaluaci√≥n aplicaciones basadas conocimiento"
    ]
    
    for consulta in consultas_especificas:
        print(f"\nüîç Probando: '{consulta}'")
        
        try:
            response = requests.post(
                f"{BASE_URL}/test-context/",
                headers={"Content-Type": "application/json"},
                json={"pregunta": consulta}
            )
            
            if response.status_code == 200:
                data = response.json()
                documentos = data.get("documentos_encontrados", 0)
                relevancia = data.get("relevancia_promedio", 0)
                
                print(f"   üìä Documentos encontrados: {documentos}")
                print(f"   üìà Relevancia promedio: {relevancia}")
                
                if documentos > 0 and relevancia > 0.2:
                    print("   ‚úÖ Contenido relevante encontrado")
                else:
                    print("   ‚ö†Ô∏è  Contenido podr√≠a no estar disponible")
                    
        except Exception as e:
            print(f"   ‚ùå Error: {e}")

if __name__ == "__main__":
    print("üöÄ INICIANDO PRUEBAS DEL PDF")
    print("Aseg√∫rate de que el servidor est√© ejecut√°ndose en localhost:8000")
    print()
    
    probar_pdf_aplicaciones()
    verificar_contexto_pdf()
    
    print("\nüéØ PARA VERIFICAR MANUALMENTE:")
    print("1. Revisar que el archivo est√© en: media/docs/espe_software_aplicaciones_basadas_en_el_conocimiento.pdf")
    print("2. Verificar que el archivo no est√© corrupto")
    print("3. Reiniciar el servidor Django para recargar documentos")
    print("4. Ejecutar: python verificar_pdf.py (script m√°s detallado)")
