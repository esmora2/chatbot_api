#!/usr/bin/env python3
"""
Script para agregar pregunta espec√≠fica sobre el DCCO a Firebase
"""
import os
import sys
import django

# Configurar Django
sys.path.append('/home/erickxse/visual/asegcbot/chatbot_api')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'chatbot_api.settings')
django.setup()

def agregar_pregunta_dcco():
    """
    Agrega la pregunta espec√≠fica sobre qu√© es el DCCO
    """
    print("üìù AGREGANDO PREGUNTA '¬øQu√© es el DCCO?' A FIREBASE")
    print("=" * 60)
    
    try:
        from chatbot.firebase_service import firebase_service
        
        # Verificar conexi√≥n
        if not firebase_service.is_connected():
            print("‚ùå Error: Firebase no est√° conectado")
            return False
        
        # Definir la pregunta y respuesta
        pregunta = "¬øQu√© es el DCCO?"
        respuesta = """El DCCO es el Departamento de Ciencias de la Computaci√≥n de la Universidad ESPE (Universidad de las Fuerzas Armadas). 

Es una unidad acad√©mica especializada en la formaci√≥n de profesionales en el campo de la inform√°tica y la tecnolog√≠a. El DCCO ofrece las siguientes carreras:

‚Ä¢ Ingenier√≠a en Software
‚Ä¢ Tecnolog√≠as de la Informaci√≥n  
‚Ä¢ Sistemas de Informaci√≥n
‚Ä¢ Ciencias de la Computaci√≥n

Sus materias destacadas incluyen:
‚Ä¢ Aplicaciones Basadas en el Conocimiento (sistemas expertos, IA, miner√≠a de datos)
‚Ä¢ Aplicaciones Distribuidas (sistemas distribuidos, microservicios)
‚Ä¢ Programaci√≥n Web, Base de Datos, Estructura de Datos, Algoritmos

El DCCO est√° ubicado en el Campus Sangolqu√≠ de la ESPE y cuenta con directores especializados como el Ing. Mauricio Campa√±a (Director de la carrera de Software)."""
        
        categoria = "Informaci√≥n Institucional"
        
        # Agregar a Firebase
        exito, mensaje = firebase_service.add_faq(pregunta, respuesta, categoria)
        
        if exito:
            print(f"‚úÖ {mensaje}")
            
            # Verificar que se agreg√≥ correctamente
            print("\nüîç Verificando que se agreg√≥ correctamente...")
            faqs = firebase_service.search_faqs("DCCO", limit=3)
            
            if faqs:
                print(f"‚úÖ Encontradas {len(faqs)} FAQs relacionadas con DCCO")
                for faq in faqs:
                    print(f"   - {faq['pregunta'][:50]}...")
            else:
                print("‚ö†Ô∏è No se encontraron FAQs con DCCO (puede tardar unos segundos en indexarse)")
            
            # Probar b√∫squeda sem√°ntica tambi√©n
            print("\nüîç Probando b√∫squeda sem√°ntica...")
            from chatbot.firebase_embeddings import firebase_embeddings
            
            # Recargar √≠ndice para incluir la nueva FAQ
            firebase_embeddings._initialized = False
            resultado = firebase_embeddings.buscar_hibrida("¬øQu√© es el DCCO?")
            
            if resultado.get('found'):
                print(f"‚úÖ B√∫squeda sem√°ntica exitosa:")
                print(f"   - M√©todo: {resultado['metodo']}")
                print(f"   - Similitud: {resultado['similarity']:.3f}")
                print(f"   - Respuesta: {resultado['answer'][:100]}...")
            else:
                print("‚ö†Ô∏è B√∫squeda sem√°ntica no encontr√≥ resultado inmediato")
            
            return True
        else:
            print(f"‚ùå Error: {mensaje}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def probar_chatbot():
    """
    Prueba el chatbot con la pregunta para verificar que funciona
    """
    print("\nü§ñ PROBANDO CHATBOT CON LA PREGUNTA...")
    print("=" * 50)
    
    try:
        import requests
        
        # Hacer solicitud al chatbot
        response = requests.post(
            'http://localhost:8000/chatbot/',
            headers={'Content-Type': 'application/json'},
            json={'pregunta': '¬øQu√© es el DCCO?'},
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Respuesta del chatbot:")
            print(f"   - M√©todo: {data.get('metodo', 'N/A')}")
            print(f"   - Fuente: {data.get('fuente', 'N/A')}")
            print(f"   - Respuesta: {data.get('respuesta', 'N/A')[:200]}...")
            
            # Verificar que no responda sobre Monster
            if "monster" in data.get('respuesta', '').lower():
                print("‚ö†Ô∏è ADVERTENCIA: A√∫n responde sobre Monster en lugar del DCCO")
                return False
            else:
                print("‚úÖ Respuesta correcta, no menciona Monster")
                return True
        else:
            print(f"‚ùå Error HTTP: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error probando chatbot: {e}")
        return False

if __name__ == "__main__":
    # Paso 1: Agregar pregunta a Firebase
    if agregar_pregunta_dcco():
        print("\n" + "="*60)
        
        # Paso 2: Probar chatbot
        import time
        print("‚è≥ Esperando 3 segundos para que se actualice el √≠ndice...")
        time.sleep(3)
        
        if probar_chatbot():
            print("\nüéâ ¬°SUCCESS! La pregunta sobre DCCO se agreg√≥ y funciona correctamente")
        else:
            print("\n‚ö†Ô∏è La pregunta se agreg√≥ pero a√∫n hay problemas en el chatbot")
    else:
        print("\n‚ùå No se pudo agregar la pregunta a Firebase")
